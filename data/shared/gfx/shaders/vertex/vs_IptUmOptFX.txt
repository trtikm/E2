#include ../version
#include ../common_vertex_shader
layout(location=BINDING_IN_POSITION) in vec3  in_position;
layout(location=BINDING_IN_TEXCOORD0) in vec2  in_texture_coords;
layout(location=BINDING_IN_INDICES_OF_MATRICES) in ivec4  in_indices_of_matrices;
layout(location=BINDING_IN_WEIGHTS_OF_MATRICES) in vec4  in_weights_of_matrices;
layout(location=BINDING_OUT_TEXCOORD0) out vec2  out_texture_coords;
uniform uint NUM_MATRICES_PER_VERTEX;
uniform mat4  TRANSFORM_MATRIX_TRANSPOSED[MAX_TRANSFORM_MATRICES];
void main() {
    int i;
    vec4 result_position = vec4(0.0f, 0.0f, 0.0f, 0.0f);
    for (i = 0; i != NUM_MATRICES_PER_VERTEX; ++i)
    {
        const vec4 pos = vec4(in_position,1.0f) *
                         TRANSFORM_MATRIX_TRANSPOSED[in_indices_of_matrices[i]];
        result_position = result_position + in_weights_of_matrices[i] * pos;
    }
    gl_Position = result_position;
    out_texture_coords = in_texture_coords;
}
