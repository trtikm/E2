// Location specifiers for input 'in' variables, i.e. values X in layout(location=X)
#if SHADER_TYPE == VERTEX_SHADER_TYPE
//  These must match the corresponding values of
//  enum 'vertex_shader_input_buffer_binding_location'
//  in the file 'qtgl/shader_data_binding.hpp'.
#   define BINDING_IN_POSITION             0
#   define BINDING_IN_COLOUR               1
#   define BINDING_IN_NORMAL               2
#   define BINDING_IN_TEXCOORD0            3
#   define BINDING_IN_TEXCOORD1            4
#   define BINDING_IN_TEXCOORD2            5
#   define BINDING_IN_TEXCOORD3            6
#   define BINDING_IN_TEXCOORD4            7
#   define BINDING_IN_TEXCOORD5            8
#   define BINDING_IN_TEXCOORD6            9
#   define BINDING_IN_TEXCOORD7            10
#   define BINDING_IN_TEXCOORD8            11
#   define BINDING_IN_TEXCOORD9            12
#elif SHADER_TYPE == FRAGMENT_SHADER_TYPE
//  These must match the corresponding values of
//  enum 'fragment_shader_input_buffer_binding_location'
//  in the file 'qtgl/shader_data_binding.hpp'.
#   define BINDING_IN_POSITION             0
#   define BINDING_IN_COLOUR               1
#   define BINDING_IN_NORMAL               2
#   define BINDING_IN_TEXCOORD0            3
#   define BINDING_IN_TEXCOORD1            4
#   define BINDING_IN_TEXCOORD2            5
#   define BINDING_IN_TEXCOORD3            6
#   define BINDING_IN_TEXCOORD4            7
#   define BINDING_IN_TEXCOORD5            8
#   define BINDING_IN_TEXCOORD6            9
#   define BINDING_IN_TEXCOORD7            10
#   define BINDING_IN_TEXCOORD8            11
#   define BINDING_IN_TEXCOORD9            12
#endif

// Location specifiers for output 'out' variables, i.e. values X in layout(location=X)
#if SHADER_TYPE != FRAGMENT_SHADER_TYPE
//  These values must match the corresponding values of
//  enum 'vertex_shader_output_buffer_binding_location'
//  in the file 'qtgl/shader_data_binding.hpp'.
#   define BINDING_OUT_POSITION         0
#   define BINDING_OUT_COLOUR           1
#   define BINDING_OUT_NORMAL           2
#   define BINDING_OUT_TEXCOORD0        3
#   define BINDING_OUT_TEXCOORD1        4
#   define BINDING_OUT_TEXCOORD2        5
#   define BINDING_OUT_TEXCOORD3        6
#   define BINDING_OUT_TEXCOORD4        7
#   define BINDING_OUT_TEXCOORD5        8
#   define BINDING_OUT_TEXCOORD6        9
#   define BINDING_OUT_TEXCOORD7        10
#   define BINDING_OUT_TEXCOORD8        11
#   define BINDING_OUT_TEXCOORD9        12
#else
//  These values must match the corresponding values of
//  enum 'fragment_shader_output_buffer_binding_location'
//  in the file 'qtgl/shader_data_binding.hpp'.
#   define BINDING_OUT_COLOUR           0
#endif

// Binding of texture samplers to particular textures.
// These values must match the corresponding value of
// enum 'fragment_shader_texture_sampler_binding'
// in the file 'qtgl/shader_data_binding.hpp'.
#define BINDING_TEXTURE_DIFFUSE         0

// Names of special uniform 'uniform' variables.
// These values must match return values of
// the function 'qtgl::uniform_name'
// in the file 'qtgl/shader_data_binding.cpp'.
#define COLOUR_ALPHA                    UNIFORM_COLOUR_ALPHA
#define TRANSFORM_MATRIX_TRANSPOSED     UNIFORM_TRANSFORM_MATRIX_TRANSPOSED
